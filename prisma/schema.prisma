// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Empresa {
  id                  String                @id @default(uuid())
  razaoSocial         String
  nomeFantasia        String?
  inscricaoMunicipal  String?
  inscricaoEstadual   String?
  cnpj                String
  dataCadastro        DateTime?             @default(now())
  dataAtualizado      DateTime?
  ativo               Boolean               @default(true)
  matriz              Boolean               @default(false)
  Usuario             Usuario[]
  EnderecoEmpresa     EnderecoEmpresa[]
  ContaFixa           Conta[]
  TipoLancamento      TipoLancamento[]
  CategoriaLancamento CategoriaLancamento[]
  Lancamento          Lancamento[]
  Financeiro          Financeiro[]
  FormaPagamento      FormaPagamento[]
  Ocorrencia          Ocorrencia[]
  FinanceiroCategoria FinanceiroCategoria[]
  TipoConta           TipoConta[]
  ContatoTipo         ContatoTipo[]
  Tipo                Tipo[]
  Classificacao       Classificacao[]
  Pessoa              Pessoa[]
  Produto             Produto[]
  UnidadeMedida       UnidadeMedida[]
  ModeloNegocio       ModeloNegocio[]
  Orcamento           Orcamento[]
  Midias              Midias[]
  Entregavel          Entregavel[]
  CondicaoPagamento   CondicaoPagamento[]
  NotasRodape         NotasRodape[]
  PessoaFilial        PessoaFilial[]
  ModeloOrcamentoItem ModeloOrcamentoItem[]
  CadastroDescricao   CadastroDescricao[]
  Projeto             Projeto[]
}

model Usuario {
  id                    String                  @id @default(uuid())
  nome                  String
  email                 String                  @unique
  senha                 String
  empresa               Empresa                 @relation(fields: [idEmpresa], references: [id])
  idEmpresa             String
  ativo                 Boolean                 @default(true)
  Permissao             Permissao[]
  Orcamento             Orcamento[]
  RascunhoOrcamento     RascunhoOrcamento[]
  Projeto               Projeto[]
  ProjetoItem           ProjetoItem[]
  ProjetoAprovador      ProjetoAprovador[]
  AcompanhamentoItem    AcompanhamentoItem[]
  Apontamento           Apontamento[]
  ApontamentoComentario ApontamentoComentario[]
  ApontamentoArquivo    ApontamentoArquivo[]
}

model MatrizFilial {
  id       String  @id @default(uuid())
  idMatriz String
  idFilial String
  ativo    Boolean @default(true)
}

model Permissao {
  id        String   @id @default(uuid())
  usuario   Usuario  @relation(fields: [idUsuario], references: [id])
  idUsuario String
  listar    Boolean? @default(false)
  cadastrar Boolean? @default(false)
  editar    Boolean? @default(false)
  excluir   Boolean? @default(false)
}

model EnderecoEmpresa {
  id          String   @id @default(uuid())
  empresa     Empresa  @relation(fields: [idEmpresa], references: [id])
  idEmpresa   String
  cep         String
  local       String
  numero      String
  bairro      String
  complemento String?
  cidade      String
  estado      String
  ativo       Boolean? @default(true)
  principal   Boolean? @default(false)
}

model Tipo {
  id        String   @id @default(uuid())
  nome      String
  empresa   Empresa  @relation(fields: [idEmpresa], references: [id])
  idEmpresa String
  ativo     Boolean  @default(true)
  Pessoa    Pessoa[]
}

model Classificacao {
  id        String   @id @default(uuid())
  nome      String
  empresa   Empresa  @relation(fields: [idEmpresa], references: [id])
  idEmpresa String
  ativo     Boolean  @default(true)
  Pessoa    Pessoa[]
}

model Pessoa {
  id                 String           @id @default(uuid())
  tipo               Tipo             @relation(fields: [idTipo], references: [id])
  idTipo             String
  nome               String
  documento          String?
  razaoSocial        String?
  nomeFantasia       String?
  inscricaoMunicipal String?
  inscricaoEstadual  String?
  ativo              Boolean?         @default(true)
  dataCadastro       DateTime?        @default(now())
  contribuinte       String
  Contato            Contato[]
  EnderecoPessoa     EnderecoPessoa[]
  Lancamento         Lancamento[]
  Financeiro         Financeiro[]
  Classificacao      Classificacao?   @relation(fields: [classificacaoId], references: [id])
  classificacaoId    String?
  empresa            Empresa?         @relation(fields: [idEmpresa], references: [id])
  idEmpresa          String?
  empresaSaida       Orcamento[]      @relation("empresaSaida")
  cliente            Orcamento[]      @relation("clientePessoa")
  agencia            Orcamento[]      @relation("agenciaPessoa")
  PessoaFilial       PessoaFilial[]   @relation("filialPessoal")
  clienteAgencia     PessoaFilial[]   @relation("agenciaClienteFilial")
  ProjetoPessoa      ProjetoPessoa[]
}

model PessoaFilial {
  id             String  @id @default(uuid())
  idFilial       String
  filial         Pessoa? @relation("filialPessoal", fields: [idFilial], references: [id])
  idPessoa       String
  clienteAgencia Pessoa? @relation("agenciaClienteFilial", fields: [idPessoa], references: [id])
  idEmpresa      String
  empresa        Empresa @relation(fields: [idEmpresa], references: [id])
}

model ContatoTipo {
  id        String  @id @default(uuid())
  nome      String
  empresa   Empresa @relation(fields: [idEmpresa], references: [id])
  idEmpresa String
}

model Contato {
  id        String   @id @default(uuid())
  pessoa    Pessoa   @relation(fields: [idPessoa], references: [id])
  idPessoa  String
  nome      String   @default("")
  cargo     String   @default("")
  telefone  String   @default("")
  email     String   @default("")
  principal Boolean  @default(false)
  ativo     Boolean? @default(true)
}

model EnderecoPessoa {
  id          String   @id @default(uuid())
  pessoa      Pessoa   @relation(fields: [idPessoa], references: [id])
  idPessoa    String
  cep         String
  local       String
  numero      String
  bairro      String
  complemento String?
  cidade      String
  estado      String
  ativo       Boolean? @default(true)
  principal   Boolean? @default(false)
}

model TipoConta {
  id        String  @id @default(uuid())
  empresa   Empresa @relation(fields: [idEmpresa], references: [id])
  idEmpresa String
  descricao String
  Conta     Conta[]
}

model Conta {
  id          String       @id @default(uuid())
  empresa     Empresa      @relation(fields: [idEmpresa], references: [id])
  idEmpresa   String
  tipoconta   TipoConta    @relation(fields: [idTipoConta], references: [id])
  idTipoConta String
  banco       String
  agencia     String
  conta       String
  ativo       Boolean?     @default(true)
  Lancamento  Lancamento[]
}

model TipoLancamento {
  id         String       @id @default(uuid())
  empresa    Empresa      @relation(fields: [idEmpresa], references: [id])
  idEmpresa  String
  nome       String
  ativo      Boolean?     @default(true)
  Lancamento Lancamento[]
}

model CategoriaLancamento {
  id         String       @id @default(uuid())
  empresa    Empresa      @relation(fields: [idEmpresa], references: [id])
  idEmpresa  String
  nome       String
  ativo      Boolean?     @default(true)
  Lancamento Lancamento[]
}

model Lancamento {
  id               String              @id @default(uuid())
  empresa          Empresa             @relation(fields: [idEmpresa], references: [id])
  idEmpresa        String
  categoria        CategoriaLancamento @relation(fields: [idCategoria], references: [id])
  idCategoria      String
  conta            Conta               @relation(fields: [contaId], references: [id])
  pessoa           Pessoa?             @relation(fields: [idPessoa], references: [id])
  idPessoa         String?
  contaId          String
  data             DateTime
  competencia      DateTime
  valor            Decimal
  tipo             String
  texto            String?
  arquivo          String?
  tipolancamento   TipoLancamento      @relation(fields: [tipoLancamentoId], references: [id])
  tipoLancamentoId String
}

model FormaPagamento {
  id         String       @id @default(uuid())
  empresa    Empresa      @relation(fields: [idEmpresa], references: [id])
  idEmpresa  String
  nome       String
  Financeiro Financeiro[]
}

model Ocorrencia {
  id         String       @id @default(uuid())
  empresa    Empresa      @relation(fields: [idEmpresa], references: [id])
  idEmpresa  String
  nome       String
  Financeiro Financeiro[]
}

model FinanceiroCategoria {
  id         String       @id @default(uuid())
  empresa    Empresa      @relation(fields: [idEmpresa], references: [id])
  idEmpresa  String
  nome       String
  Financeiro Financeiro[]
}

model Financeiro {
  id                    String               @id @default(uuid())
  empresa               Empresa              @relation(fields: [idEmpresa], references: [id])
  idEmpresa             String
  pessoa                Pessoa               @relation(fields: [idPessoa], references: [id])
  idPessoa              String
  formapagamento        FormaPagamento       @relation(fields: [formaPagamentoId], references: [id])
  formaPagamentoId      String
  vencimento            DateTime
  vecimentoOriginal     DateTime
  valor                 Decimal
  emissao               DateTime?            @default(now())
  competencia           DateTime?            @default(now())
  documento             String?
  texto                 String?
  arquivo               String?
  Ocorrencia            Ocorrencia?          @relation(fields: [ocorrenciaId], references: [id])
  ocorrenciaId          String?
  FinanceiroCategoria   FinanceiroCategoria? @relation(fields: [financeiroCategoriaId], references: [id])
  financeiroCategoriaId String?
  dataPagamento         String
}

model UnidadeMedida {
  id                      String                    @id @default(uuid())
  empresa                 Empresa                   @relation(fields: [idEmpresa], references: [id])
  idEmpresa               String
  nome                    String
  ativo                   Boolean                   @default(true)
  ProdutoUnidade          ProdutoUnidade[]
  OrcamentoItem           OrcamentoItem[]
  ModeloOrcamentoItemList ModeloOrcamentoItemList[]
  ProjetoItem             ProjetoItem[]
}

model Produto {
  id                      String                    @id @default(uuid())
  empresa                 Empresa                   @relation(fields: [idEmpresa], references: [id])
  idEmpresa               String
  nome                    String
  ativo                   Boolean                   @default(true)
  ProdutoUnidade          ProdutoUnidade[]
  OrcamentoItem           OrcamentoItem[]
  ModeloOrcamentoItemList ModeloOrcamentoItemList[]
  ProjetoItem             ProjetoItem[]
}

model ProdutoUnidade {
  id                  String             @id @default(uuid())
  unidade             UnidadeMedida      @relation(fields: [unidadeMedidaId], references: [id])
  unidadeMedidaId     String
  produto             Produto            @relation(fields: [produtoId], references: [id])
  diasPgto            String
  produtoId           String
  valorMin            Decimal
  valorMax            Decimal
  principal           Boolean            @default(false)
  condicaoPagamentoId String?            @default("")
  CondicaoPagamento   CondicaoPagamento? @relation(fields: [condicaoPagamentoId], references: [id])
}

model ModeloNegocio {
  id              String      @id @default(uuid())
  empresa         Empresa     @relation(fields: [idEmpresa], references: [id])
  idEmpresa       String
  nome            String
  dataCriacao     DateTime    @default(now())
  validade        DateTime
  descricao       String
  metaFaturamento Decimal
  metaLucro       Decimal
  custoFixo       Decimal
  custoVenda      Decimal
  imposto         Decimal
  desconto        Decimal
  Orcamento       Orcamento[]
}

model CondicaoPagamento {
  id             String           @id @default(uuid())
  empresa        Empresa          @relation(fields: [idEmpresa], references: [id])
  idEmpresa      String
  nome           String
  condicao       String
  variacao       Decimal
  divisor        Decimal
  Orcamento      Orcamento[]
  ProdutoUnidade ProdutoUnidade[]
}

model Midias {
  id              String            @id @default(uuid())
  empresa         Empresa           @relation(fields: [idEmpresa], references: [id])
  idEmpresa       String
  nome            String
  ativo           Boolean           @default(true)
  OrcamentoMidias OrcamentoMidias[]
}

model Entregavel {
  id              String            @id @default(uuid())
  empresa         Empresa           @relation(fields: [idEmpresa], references: [id])
  idEmpresa       String
  nome            String
  ativo           Boolean           @default(true)
  EntregavelItens EntregavelItens[]
}

model Orcamento {
  id                     Int                  @id @default(autoincrement())
  empresa                Empresa              @relation(fields: [idEmpresa], references: [id])
  idEmpresa              String
  versao                 Int
  dataCriacao            DateTime             @default(now())
  dataEdicao             DateTime             @default(now())
  data                   DateTime
  empresaSaida           Pessoa?              @relation("empresaSaida", fields: [empresaSaiadaId], references: [id])
  empresaSaiadaId        String?
  cliente                Pessoa?              @relation("clientePessoa", fields: [clientId], references: [id])
  clientId               String?
  nome                   String
  status                 String
  nomeVersao             String               @default("Versão Inicial")
  notas                  String
  contatoCliente         String
  contatoClienteTelefone String
  contatoClienteEmail    String
  agencia                Pessoa?              @relation("agenciaPessoa", fields: [agenciaId], references: [id])
  agenciaId              String?
  showAgencia            Boolean
  contatoAgencia         String?
  contatoAgenciaTelefone String?
  contatoAgenciaEmail    String?
  condicaoPagamento      CondicaoPagamento    @relation(fields: [condicaoPagamentoId], references: [id])
  condicaoPagamentoId    String
  validade               DateTime
  periodoVeiculacao      String
  OrcamentoMidias        OrcamentoMidias[]
  EntregavelItens        EntregavelItens[]
  Usuario                Usuario?             @relation(fields: [usuarioId], references: [id])
  usuarioId              String?
  modeloNegocio          ModeloNegocio?       @relation(fields: [modeloNegocioId], references: [id])
  modeloNegocioId        String?
  OrcamentoCategoria     OrcamentoCategoria[]
  tipoAcrescimo          String               @default("0")
  acrescimo              Decimal
  tipoComissao           String               @default("0")
  comissao               Decimal
  notaRodape             NotasRodape?         @relation(fields: [notaRodapeId], references: [id])
  notaRodapeId           String?
  notaRodateTexto        String
  tipoDesconto           String               @default("0")
  desconto               Decimal
  total                  Decimal
  CadastroDescricao      CadastroDescricao?   @relation(fields: [cadastroDescricaoId], references: [id])
  cadastroDescricaoId    String?
  descricao              String
  Projeto                Projeto[]
}

model OrcamentoCategoria {
  id            String          @id @default(uuid())
  Orcamento     Orcamento?      @relation(fields: [orcamentoId], references: [id], onDelete: Cascade)
  orcamentoId   Int?
  OrcamentoItem OrcamentoItem[]
  descricao     String
  valor         Decimal
}

model OrcamentoItem {
  id                   String             @id @default(uuid())
  orcamentoCategoria   OrcamentoCategoria @relation(fields: [orcamentoCategoriaId], references: [id], onDelete: Cascade)
  orcamentoCategoriaId String
  produto              Produto            @relation(fields: [produtoId], references: [id])
  produtoId            String
  descricao            String?
  unidade              UnidadeMedida?     @relation(fields: [unidadeMedidaId], references: [id])
  unidadeMedidaId      String?
  quantidade           Decimal
  valorUn              Decimal
  valorTotal           Decimal
}

model OrcamentoMidias {
  id          String     @id @default(uuid())
  orcamento   Orcamento? @relation(fields: [orcamentoId], references: [id], onDelete: Cascade)
  orcamentoId Int?
  midias      Midias     @relation(fields: [midiasId], references: [id])
  midiasId    String
}

model EntregavelItens {
  id           String     @id @default(uuid())
  entregavel   Entregavel @relation(fields: [entregavelId], references: [id])
  entregavelId String
  Orcamento    Orcamento  @relation(fields: [orcamentoId], references: [id], onDelete: Cascade)
  orcamentoId  Int
  quantidade   Int
  descricao    String     @default("")
}

model NotasRodape {
  id        String      @id @default(uuid())
  nome      String
  descricao String
  empresa   Empresa     @relation(fields: [idEmpresa], references: [id])
  idEmpresa String
  Orcamento Orcamento[]
}

model ModeloOrcamentoItem {
  id                           String                         @id @default(uuid())
  empresa                      Empresa                        @relation(fields: [idEmpresa], references: [id])
  idEmpresa                    String
  nome                         String
  ModeloOrcamentoItemCategoria ModeloOrcamentoItemCategoria[]
}

model ModeloOrcamentoItemCategoria {
  id                      String                    @id @default(uuid())
  descricao               String
  valor                   Decimal
  modeloOrcamentoItem     ModeloOrcamentoItem       @relation(fields: [modeloOrcamentoItemId], references: [id])
  modeloOrcamentoItemId   String
  ModeloOrcamentoItemList ModeloOrcamentoItemList[]
}

model ModeloOrcamentoItemList {
  id                             String                       @id @default(uuid())
  modeloOrcamentoItemCategoria   ModeloOrcamentoItemCategoria @relation(fields: [modeloOrcamentoItemCategoriaId], references: [id], onDelete: Cascade)
  modeloOrcamentoItemCategoriaId String
  produto                        Produto                      @relation(fields: [produtoId], references: [id])
  produtoId                      String
  descricao                      String?
  unidade                        UnidadeMedida?               @relation(fields: [unidadeMedidaId], references: [id])
  unidadeMedidaId                String?
  quantidade                     Decimal
  valorUn                        Decimal
  valorTotal                     Decimal
}

model RascunhoOrcamento {
  id        Int      @id @default(autoincrement())
  Usuario   Usuario? @relation(fields: [usuarioId], references: [id])
  usuarioId String?
  rascunho  String   @db.Text
  data      DateTime @default(now())
}

model CadastroDescricao {
  id        String      @id @default(uuid())
  nome      String
  descricao String
  empresa   Empresa     @relation(fields: [idEmpresa], references: [id])
  idEmpresa String
  Orcamento Orcamento[]
}

model Projeto {
  id                   Int                @id @default(autoincrement())
  empresa              Empresa            @relation(fields: [idEmpresa], references: [id])
  idEmpresa            String
  Orcamento            Orcamento          @relation(fields: [orcamentoId], references: [id])
  orcamentoId          Int
  Usuario              Usuario            @relation(fields: [usuarioId], references: [id])
  usuarioId            String
  dataCriacao          DateTime           @default(now())
  dataEdicao           DateTime           @default(now())
  ProjetoCategoria     ProjetoCategoria[]
  aprovado             Boolean            @default(false)
  aprovadoCalculo      Boolean            @default(false)
  Acompanhamento       Acompanhamento[]
  descricao            String?
  ProjetoAprovador     ProjetoAprovador[]
  ProjetoPessoa        ProjetoPessoa[]
  linkDiretor          String
  linkPastaExecutiva   String
  linkPastaFinalizacao String
  resumoCronograma     String
  linkCronograma       String
  notasInternas        String
  notasClienteAgencia  String
  notasFaturamento     String
  ProjetoContato       ProjetoContato[]
  ProjetoArquivos      ProjetoArquivos[]
}

model ProjetoCategoria {
  id                      String                    @id @default(uuid())
  Projeto                 Projeto                   @relation(fields: [projetoId], references: [id])
  projetoId               Int
  descricao               String
  valor                   Decimal
  orcado                  Decimal
  trabalhado              Decimal
  executado               Decimal
  ProjetoItem             ProjetoItem[]
  aprovado                Boolean                   @default(false)
  AcompanhamentoCategoria AcompanhamentoCategoria[]
}

model ProjetoItem {
  id                 String           @id @default(uuid())
  ProjetoCategoria   ProjetoCategoria @relation(fields: [projetoCategoriaId], references: [id])
  projetoCategoriaId String
  produto            Produto          @relation(fields: [produtoId], references: [id])
  produtoId          String
  descricao          String?
  unidade            UnidadeMedida?   @relation(fields: [unidadeMedidaId], references: [id])
  unidadeMedidaId    String?
  quantidade         Decimal
  valorUn            Decimal
  valorTotal         Decimal
  orcado             Decimal
  trabalhado         Decimal
  executado          Decimal
  Usuario            Usuario?         @relation(fields: [usuarioId], references: [id])
  usuarioId          String?
  aprovado           Boolean          @default(false)
}

model ProjetoAprovador {
  id        String  @id @default(uuid())
  Projeto   Projeto @relation(fields: [projetoId], references: [id])
  projetoId Int
  Usuario   Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId String
  nivel     Int
}

model ProjetoPessoa {
  id        String  @id @default(uuid())
  Projeto   Projeto @relation(fields: [projetoId], references: [id])
  projetoId Int
  Pessoa    Pessoa  @relation(fields: [pessoaId], references: [id])
  pessoaId  String
}

model ProjetoContato {
  id        String   @id @default(uuid())
  Projeto   Projeto  @relation(fields: [projetoId], references: [id])
  projetoId Int
  nome      String   @default("")
  cargo     String   @default("")
  telefone  String   @default("")
  email     String   @default("")
  principal Boolean  @default(false)
  ativo     Boolean? @default(true)
}

model ProjetoArquivos {
  id        String  @id @default(uuid())
  Projeto   Projeto @relation(fields: [projetoId], references: [id])
  projetoId Int
  arquivo   String
}

model Acompanhamento {
  id                      String                    @id @default(uuid())
  Projeto                 Projeto                   @relation(fields: [projetoId], references: [id])
  projetoId               Int
  horas                   Int
  dataInicio              DateTime
  dataFim                 DateTime
  AcompanhamentoCategoria AcompanhamentoCategoria[]
}

model AcompanhamentoCategoria {
  id                 String               @id @default(uuid())
  Acompanhamento     Acompanhamento       @relation(fields: [acompanhamentoId], references: [id])
  acompanhamentoId   String
  ProjetoCategoria   ProjetoCategoria     @relation(fields: [projetoCategoriaId], references: [id])
  projetoCategoriaId String
  horas              Int
  dataInicio         DateTime
  dataFim            DateTime
  AcompanhamentoItem AcompanhamentoItem[]
}

model AcompanhamentoItem {
  id                        String                  @id @default(uuid())
  AcompanhamentoCategoria   AcompanhamentoCategoria @relation(fields: [acompanhamentoCategoriaId], references: [id])
  acompanhamentoCategoriaId String
  Usuario                   Usuario                 @relation(fields: [usuarioId], references: [id])
  usuarioId                 String
  horas                     Int
  dataInicio                DateTime
  dataFim                   DateTime
  Apontamento               Apontamento[]
}

model Apontamento {
  id                    String                  @id @default(uuid())
  AcompanhamentoItem    AcompanhamentoItem      @relation(fields: [acompanhamentoItemId], references: [id])
  acompanhamentoItemId  String
  Usuario               Usuario                 @relation(fields: [usuarioId], references: [id])
  usuarioId             String
  dataInicio            DateTime
  dataFim               DateTime
  descricao             String
  ApontamentoComentario ApontamentoComentario[]
  ApontamentoArquivo    ApontamentoArquivo[]
}

model ApontamentoComentario {
  id            String      @id @default(uuid())
  Apontamento   Apontamento @relation(fields: [apontamentoId], references: [id])
  apontamentoId String
  descricao     String
  data          DateTime
  Usuario       Usuario     @relation(fields: [usuarioId], references: [id])
  usuarioId     String
}

model ApontamentoArquivo {
  id            String      @id @default(uuid())
  Apontamento   Apontamento @relation(fields: [apontamentoId], references: [id])
  apontamentoId String
  arquivo       String
  Usuario       Usuario     @relation(fields: [usuarioId], references: [id])
  usuarioId     String
}
